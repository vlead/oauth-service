#+TITLE: The Demo CAS Server application
#+AUTHOR: Shubh
#+DATE: [2017-06-05 Mon]
#+SETUPFILE: ../org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction
  This document will illustrate working of the CAS Service that is to be used by VLEAD
  This is the parent directory of the application 
  Our goal is to keep the main server and also a demo client server in this file.


* [[./vlead-cas-server/index.org][VLEAD CAS Server]]
  The link contains the documentation of the CAS Server


* [[./vlead-cas-managment/index.org][CAS Management Server]]
  The link contains the documnetation of the CAS Managment Server


* Pom.xml 
  Various dependencies are defined in pom.xml and using maven we download and utilize these dependencies
  #+BEGIN_SRC :eval no :tangle pom.xml
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.vlead</groupId>
    <artifactId>vlead-cas-overlay</artifactId>
    <version>5.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>VLEAD CAS</name>
    <description>CAS Overlay for VLEAD</description>

    <repositories>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>shibboleth-public-repo</id>
            <name>Shibboleth releases repository</name>
            <url>https://build.shibboleth.net/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-webapp</artifactId>
                <version>${cas.version}</version>
                <type>war</type>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-management-webapp</artifactId>
                <version>${cas.version}</version>
                <type>war</type>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apereo.cas</groupId>
                <artifactId>cas-server-support-json-service-registry</artifactId>
                <version>${cas.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <modules>
        <module>vlead-cas-server</module>
    </modules>

    <properties>
        <cas.version>5.0.0.RC1</cas.version>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
</project>
#+END_SRC

   
* Script to run the server
    For easy startup of the server we can use run.sh. 
    * It requires the root access *
   #+BEGIN_SRC  :eval no :tangle run.sh 
   
    cp ../../../src/vlead-cas-overlay/vlead-cas-server/src/main/resources/truststore.jks vlead-cas-server/src/main/resources/

    fuser -k 8443/tcp
    fuser -k 8081/tcp

    mvn -Djava.net.useSystemProxies=true clean package
   
    java -jar -Djava.net.useSystemProxies=true vlead-cas-server/target/cas.war
   #+END_SRC


* Using Docker
** Script to run using Docker 

#+BEGIN_SRC :eval no :tangle docker.sh

#!/bin/sh

mvn clean package
cd vlead-cas-server
docker build -t vlead-cas-server .
docker run --name server -p 127.0.0.1:8443:8443 -i -d vlead-cas-server
cd ../vlead-cas-management/
docker build -t vlead-cas-management .
docker run --name management -p 127.0.0.1:8081:8081 -i -d vlead-cas-management

#+END_SRC   


** Script to stop Docker
#+BEGIN_SRC :eval no :tangle end.sh
#!/bin/sh

docker stop management server
docker rm management server

#+END_SRC
   
